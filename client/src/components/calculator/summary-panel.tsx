import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from "@/components/ui/collapsible";
import { Download, Copy, ChevronDown, Info } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

interface SummaryData {
  tdd?: string;
  basal?: string;
  bolus?: string;
  breakfastBolus?: string;
  lunchBolus?: string;
  dinnerBolus?: string;
  correction?: string;
  moduleName: string;
}

interface SummaryPanelProps {
  data: SummaryData;
  show: boolean;
}

export function SummaryPanel({ data, show }: SummaryPanelProps) {
  const [isInsulinGuideOpen, setIsInsulinGuideOpen] = useState(false);
  const { toast } = useToast();

  if (!show) return null;

  const generateSummaryText = () => {
    const lines = [`üìã ${data.moduleName} Summary:`];
    
    if (data.tdd && data.tdd !== "--") {
      lines.push(`- TDD: ${data.tdd} units`);
    }
    
    if (data.basal && data.basal !== "--") {
      lines.push(`- Basal: ${data.basal} units`);
    }
    
    if (data.breakfastBolus && data.lunchBolus && data.dinnerBolus) {
      lines.push(`- Breakfast Bolus: ${data.breakfastBolus} units`);
      lines.push(`- Lunch Bolus: ${data.lunchBolus} units`);
      lines.push(`- Dinner Bolus: ${data.dinnerBolus} units`);
    } else if (data.bolus && data.bolus !== "--") {
      lines.push(`- Bolus: ${data.bolus} units (per meal)`);
    }
    
    if (data.correction && data.correction !== "--" && data.correction !== "0.0") {
      lines.push(`- Correction: ${data.correction} units`);
    }
    
    lines.push(`\nGenerated by Insulin Calculator - ADA 2025 Guidelines`);
    return lines.join('\n');
  };

  const handleCopyToClipboard = async () => {
    try {
      await navigator.clipboard.writeText(generateSummaryText());
      toast({
        title: "Copied to clipboard",
        description: "Summary has been copied to your clipboard",
      });
    } catch (error) {
      toast({
        title: "Copy failed",
        description: "Unable to copy to clipboard",
        variant: "destructive",
      });
    }
  };

  const handlePrintPDF = () => {
    const printWindow = window.open('', '_blank');
    if (printWindow) {
      printWindow.document.write(`
        <html>
          <head>
            <title>${data.moduleName} Summary</title>
            <style>
              body { font-family: Arial, sans-serif; padding: 20px; }
              h1 { color: #1e40af; border-bottom: 2px solid #e5e7eb; padding-bottom: 10px; }
              .summary { background: #f8fafc; padding: 15px; border-radius: 8px; margin: 20px 0; }
              .disclaimer { color: #6b7280; font-size: 12px; margin-top: 20px; }
            </style>
          </head>
          <body>
            <h1>${data.moduleName}</h1>
            <div class="summary">
              <pre>${generateSummaryText()}</pre>
            </div>
            <div class="disclaimer">
              This calculation is for clinical guidance only and should be used in conjunction with clinical judgment.
              Generated on ${new Date().toLocaleDateString()} at ${new Date().toLocaleTimeString()}
            </div>
          </body>
        </html>
      `);
      printWindow.document.close();
      printWindow.print();
    }
  };

  return (
    <div className="space-y-4">
      <Card className="border-blue-200 bg-blue-50">
        <CardContent className="p-4">
          <div className="flex items-center justify-between mb-3">
            <h3 className="text-lg font-medium text-blue-900">üìã Summary</h3>
            <div className="flex space-x-2">
              <Button
                variant="outline"
                size="sm"
                onClick={handleCopyToClipboard}
                className="text-blue-700 border-blue-300 hover:bg-blue-100"
              >
                <Copy className="w-4 h-4 mr-1" />
                Copy
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={handlePrintPDF}
                className="text-blue-700 border-blue-300 hover:bg-blue-100"
              >
                <Download className="w-4 h-4 mr-1" />
                Print PDF
              </Button>
            </div>
          </div>
          
          <div className="space-y-2 text-sm">
            {data.tdd && data.tdd !== "--" && (
              <div className="flex justify-between">
                <span className="text-slate-600">TDD:</span>
                <span className="font-medium text-slate-900">{data.tdd} units</span>
              </div>
            )}
            
            {data.basal && data.basal !== "--" && (
              <div className="flex justify-between">
                <span className="text-slate-600">Basal:</span>
                <span className="font-medium text-slate-900">{data.basal} units</span>
              </div>
            )}
            
            {data.breakfastBolus && data.lunchBolus && data.dinnerBolus ? (
              <>
                <div className="flex justify-between">
                  <span className="text-slate-600">Breakfast Bolus:</span>
                  <span className="font-medium text-slate-900">{data.breakfastBolus} units</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-slate-600">Lunch Bolus:</span>
                  <span className="font-medium text-slate-900">{data.lunchBolus} units</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-slate-600">Dinner Bolus:</span>
                  <span className="font-medium text-slate-900">{data.dinnerBolus} units</span>
                </div>
              </>
            ) : (
              data.bolus && data.bolus !== "--" && (
                <div className="flex justify-between">
                  <span className="text-slate-600">Bolus:</span>
                  <span className="font-medium text-slate-900">{data.bolus} units (split across 3 meals)</span>
                </div>
              )
            )}
            
            {data.correction && data.correction !== "--" && data.correction !== "0.0" && (
              <div className="flex justify-between">
                <span className="text-slate-600">Correction:</span>
                <span className="font-medium text-slate-900">{data.correction} units</span>
              </div>
            )}
          </div>
          
          <div className="mt-3 pt-3 border-t border-blue-200">
            <p className="text-xs text-blue-700">
              ‚ùå No patient identifiers ‚Ä¢ For clinical guidance only
            </p>
          </div>
        </CardContent>
      </Card>

      <Card className="border-slate-200">
        <Collapsible open={isInsulinGuideOpen} onOpenChange={setIsInsulinGuideOpen}>
          <CollapsibleTrigger asChild>
            <CardContent className="p-4 cursor-pointer hover:bg-slate-50">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-2">
                  <Info className="w-4 h-4 text-slate-600" />
                  <h3 className="text-sm font-medium text-slate-900">üíâ Insulin Options</h3>
                </div>
                <ChevronDown className={`w-4 h-4 text-slate-400 transition-transform ${isInsulinGuideOpen ? 'rotate-180' : ''}`} />
              </div>
            </CardContent>
          </CollapsibleTrigger>
          <CollapsibleContent>
            <CardContent className="pt-0 px-4 pb-4">
              <div className="space-y-4">
                <div>
                  <h4 className="text-sm font-medium text-slate-700 mb-2">Basal Insulin</h4>
                  <div className="text-xs text-slate-600 space-y-1">
                    <p>‚Ä¢ Glargine (Lantus) - 24 hour duration</p>
                    <p>‚Ä¢ Detemir (Levemir) - 12-24 hour duration</p>
                    <p>‚Ä¢ Degludec (Tresiba) - over 24 hour duration</p>
                  </div>
                </div>
                
                <div>
                  <h4 className="text-sm font-medium text-slate-700 mb-2">Bolus & Correction Insulin</h4>
                  <div className="text-xs text-slate-600 space-y-1">
                    <p>‚Ä¢ Aspart (Novolog) - Onset 10-20 min</p>
                    <p>‚Ä¢ Lispro (Humalog) - Onset 15-30 min</p>
                    <p>‚Ä¢ Glulisine (Apidra) - Onset 20-30 min</p>
                  </div>
                </div>
                
                <div className="bg-yellow-50 border border-yellow-200 rounded p-3">
                  <p className="text-xs text-yellow-800">
                    <strong>Note:</strong> Use the same rapid-acting insulin for both bolus and correction doses
                  </p>
                </div>
              </div>
            </CardContent>
          </CollapsibleContent>
        </Collapsible>
      </Card>
    </div>
  );
}